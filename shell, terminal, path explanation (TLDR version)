Difference Between Shell and Terminal:

Shell:
    - A shell is a program that interprets and executes commands. Examples include bash, zsh, and fish.
    - It provides an environment for running scripts, managing processes, and interacting with the operating system.

Terminal:
    - A terminal is an interface or application that provides access to a shell. Examples include Terminal.app (Mac), GNOME Terminal (Linux), and PuTTY (Windows).
    - It's essentially a window or emulator that allows you to communicate with the shell.

Analogy:
    - The terminal is the doorway.
    - The shell is the person inside the room responding to your commands.

Note:
    - Modern terminals are often referred to as terminal emulators, as they replicate the functionality of older physical terminals that connected to mainframes.

------------------------------------------------------------
PATH:

TLDR: A PATH isn't a property of your computer - it's just a variable that each shell process maintains separately. Think of it like this:

    - Your machine has files and folders, but doesn't inherently know what a "PATH" is.
    - Each shell (zsh, bash, etc.) maintains its own PATH variable.
    - When you start a new shell, it builds its PATH by reading config files.

So if you have:
    - Terminal 1 running zsh
    - Terminal 2 running bash
    - Terminal 3 running fish

They could all have different PATHs at the same time, because they're separate processes reading different config files. Even two zsh windows could have different PATHs if you modified one's PATH during its session.

The PATH is just each shell's personal "where to look for commands" list, not a system-wide setting.
